{"config":{"lang":["ja"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":""},{"location":"#overview","title":"Overview","text":""},{"location":"#what-is-argo-cd","title":"What Is Argo CD?","text":"<p>Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.</p> <p></p>"},{"location":"#why-argo-cd","title":"Why Argo CD?","text":"<p>Application definitions, configurations, and environments should be declarative and version controlled. Application deployment and lifecycle management should be automated, auditable, and easy to understand.</p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>kubectl create namespace argocd\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n</code></pre> <p>Follow our getting started guide. Further user oriented documentation is provided for additional features. If you are looking to upgrade ArgoCD, see the upgrade guide. Developer oriented documentation is available for people interested in building third-party integrations.</p>"},{"location":"#how-it-works","title":"How it works","text":"<p>Argo CD follows the GitOps pattern of using Git repositories as the source of truth for defining the desired application state. Kubernetes manifests can be specified in several ways:</p> <ul> <li>kustomize applications</li> <li>helm charts</li> <li>jsonnet files</li> <li>Plain directory of YAML/json manifests</li> <li>Any custom config management tool configured as a config management plugin</li> </ul> <p>Argo CD automates the deployment of the desired application states in the specified target environments. Application deployments can track updates to branches, tags, or pinned to a specific version of manifests at a Git commit. See tracking strategies for additional details about the different tracking strategies available.</p> <p>For a quick 10 minute overview of Argo CD, check out the demo presented to the Sig Apps community meeting:</p> <p></p>"},{"location":"#architecture","title":"Architecture","text":"<p>Argo CD is implemented as a kubernetes controller which continuously monitors running applications and compares the current, live state against the desired target state (as specified in the Git repo). A deployed application whose live state deviates from the target state is considered <code>OutOfSync</code>. Argo CD reports &amp; visualizes the differences, while providing facilities to automatically or manually sync the live state back to the desired target state. Any modifications made to the desired target state in the Git repo can be automatically applied and reflected in the specified target environments.</p> <p>For additional details, see architecture overview.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Automated deployment of applications to specified target environments</li> <li>Support for multiple config management/templating tools (Kustomize, Helm, Jsonnet, plain-YAML)</li> <li>Ability to manage and deploy to multiple clusters</li> <li>SSO Integration (OIDC, OAuth2, LDAP, SAML 2.0, GitHub, GitLab, Microsoft, LinkedIn)</li> <li>Multi-tenancy and RBAC policies for authorization</li> <li>Rollback/Roll-anywhere to any application configuration committed in Git repository</li> <li>Health status analysis of application resources</li> <li>Automated configuration drift detection and visualization</li> <li>Automated or manual syncing of applications to its desired state</li> <li>Web UI which provides real-time view of application activity</li> <li>CLI for automation and CI integration</li> <li>Webhook integration (GitHub, BitBucket, GitLab)</li> <li>Access tokens for automation</li> <li>PreSync, Sync, PostSync hooks to support complex application rollouts (e.g.blue/green &amp; canary upgrades)</li> <li>Audit trails for application events and API calls</li> <li>Prometheus metrics</li> <li>Parameter overrides for overriding helm parameters in Git</li> </ul>"},{"location":"#development-status","title":"Development Status","text":"<p>Argo CD is being actively developed by the community. Our releases can be found here.</p>"},{"location":"#adoption","title":"Adoption","text":"<p>Organizations who have officially adopted Argo CD can be found here.</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#welcome-to-mkdocs","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"tags/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"tags/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"blog/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"blog/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"blog/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"containerd/Quick/","title":"Quick","text":""},{"location":"containerd/Quick/#quick-start","title":"Quick Start","text":"<pre><code>ctr image pull  docker.io/gitlab/gitlab-ce:latest\n</code></pre> <pre><code># 1. \u5148\u521b\u5efa\u540d\u4e3a gitlab \u7684 container \u5bf9\u8c61\nctr container create docker.io/gitlab/gitlab-ce:latest gitlab\n# 2. \u518d\u7d27\u63a5\u7740\u6267\u884c ctr task start \u624d\u4f1a\u771f\u6b63\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\uff0ccontainer \u5bf9\u8c61\u53ea\u662f\u4e00\u4e2a\u9759\u6001\u7684\u6570\u636e\u7ed3\u6784\u3002-d \u540c docker \u4e2d\u7684 -d\nctr task start -d gitlab\n\n# \u6548\u679c\u540c\u4e0a\uff0c\u76f8\u540c\u5c06\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\u5408\u4e3a\u4e00\u6b65\uff0c\u76f4\u63a5\u542f\u52a8\u4e00\u4e2a\u771f\u6b63\u7684\u5bb9\u5668\uff0c\u4e5f\u4f1a\u6709 container \u548c task \u4e24\u4e2a\u5bf9\u8c61\nctr run -d docker.io/gitlab/gitlab-ce:latest gitlab\n\n\n# nerdctl \u542f\u52a8\u5bb9\u5668\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u955c\u50cf\u662f docker.io/library/nginx:latest\uff0c\u540c docker \u7684\u4f7f\u7528\nnerdctl run -d --name gitlab nginx \n\n\n# crictl \u65e0\u6cd5\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u9700\u8981\u5728 sandbox \u4e2d\u521b\u5efa\u5bb9\u5668\ncrictl run container-config.[json|yaml] pod-config.[json|yaml]\n</code></pre>"},{"location":"devops/gitlab/","title":"Gitlab","text":""},{"location":"devops/gitlab/#quick-start-with-docker","title":"Quick Start with Docker","text":"<pre><code>docker run --detach \\\n  --hostname gitlab.example.com \\\n  --publish 443:443 --publish 80:80 --publish 22:22 \\\n  --name gitlab \\\n  --restart always \\\n  --volume $GITLAB_HOME/config:/etc/gitlab:Z \\\n  --volume $GITLAB_HOME/logs:/var/log/gitlab:Z \\\n  --volume $GITLAB_HOME/data:/var/opt/gitlab:Z \\\n  --shm-size 256m \\\n  gitlab/gitlab-ce:latest\n</code></pre>"},{"location":"harbor/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"harbor/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"harbor/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"ingress/Quick/","title":"Quick Start","text":""},{"location":"ingress/Quick/#welcome-to-mkdocs","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"ingress/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"ingress/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"istio/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"istio/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"istio/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"kubesphere/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"kubesphere/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"kubesphere/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"openkruise/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"openkruise/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"openkruise/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"prometheus/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"prometheus/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"prometheus/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"user-guide/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"user-guide/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"user-guide/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"user-guide/tracking_strategies/","title":"Tracking and Deployment Strategies","text":"<p>An Argo CD application spec provides several different ways of tracking Kubernetes resource manifests.</p> <p>In all tracking strategies, the app has the option to sync automatically. If auto-sync is configured, the new resources manifests will be applied automatically -- as soon as a difference is detected.</p> <p>!!! note     In all tracking strategies, any parameter overrides take precedence over the Git state.</p>"},{"location":"user-guide/tracking_strategies/#helm","title":"Helm","text":"<p>For Helm, all versions are Semantic Versions. As a result, you can either version ranges:</p> Use Case How Examples Pin to a version (e.g. in production) Use the version number <code>1.2.0</code> Track patches (e.g. in pre-production) Use a range <code>1.2.*</code> or <code>&gt;=1.2.0 &lt;1.3.0</code> Track minor releases (e.g. in QA) Use a range <code>1.*</code> or <code>&gt;=1.0.0 &lt;2.0.0</code> Use the latest (e.g. in local development) Use star range <code>*</code> or <code>&gt;=0.0.0</code> <p>Read about version ranges</p>"},{"location":"user-guide/tracking_strategies/#git","title":"Git","text":"<p>For Git, all versions are Git references:</p> Use Case How Notes Pin to a version (e.g. in production) Either (a) tag the commit with (e.g. <code>v1.2.0</code>) and use that tag, or (b) using commit SHA. See commit pinning. Track patches (e.g. in pre-production) Tag/re-tag the commit, e.g. (e.g. <code>v1.2</code>) and use that tag. See tag tracking Track minor releases (e.g. in QA) Re-tag the commit as (e.g. <code>v1</code>) and use that tag. See tag tracking Use the latest (e.g. in local development) Use <code>HEAD</code> or <code>master</code> (assuming <code>master</code> is your master branch). See HEAD / Branch Tracking"},{"location":"user-guide/tracking_strategies/#head-branch-tracking","title":"HEAD / Branch Tracking","text":"<p>If a branch name, or a symbolic reference (like HEAD) is specified, Argo CD will continually compare live state against the resource manifests defined at the tip of the specified branch or the resolved commit of the symbolic reference.</p> <p>To redeploy an app, make a change to (at least) one of your manifests, commit and push to the tracked branch/symbolic reference. The change will then be detected by Argo CD.</p>"},{"location":"user-guide/tracking_strategies/#tag-tracking","title":"Tag Tracking","text":"<p>If a tag is specified, the manifests at the specified Git tag will be used to perform the sync comparison. This provides some advantages over branch tracking in that a tag is generally considered more stable, and less frequently updated, with some manual judgement of what constitutes a tag.</p> <p>To redeploy an app, the user uses Git to change the meaning of a tag by retagging it to a different commit SHA. Argo CD will detect the new meaning of the tag when performing the comparison/sync.</p>"},{"location":"user-guide/tracking_strategies/#commit-pinning","title":"Commit Pinning","text":"<p>If a Git commit SHA is specified, the app is effectively pinned to the manifests defined at the specified commit. This is the most restrictive of the techniques and is typically used to control production environments.</p> <p>Since commit SHAs cannot change meaning, the only way to change the live state of an app which is pinned to a commit, is by updating the tracking revision in the application to a different commit containing the new manifests. Note that parameter overrides can still be set on an app which is pinned to a revision.</p>"},{"location":"victoriametrics/Quick/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"victoriametrics/Quick/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"victoriametrics/Quick/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"}]}